// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_string
// @generated from protobuf file "ollyllm/v1/ollyllm.proto" (package "ollyllm.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { OllyllmService } from "./ollyllm";
import type { SpanCreationRequest } from "./span_creation";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "../../google/protobuf/empty";
import type { TestExecutionRequest } from "./test_execution";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ollyllm.v1.OllyllmService
 */
export interface IOllyllmServiceClient {
    /**
     * @generated from protobuf rpc: QueueTest(ollyllm.v1.TestExecutionRequest) returns (google.protobuf.Empty);
     */
    queueTest(input: TestExecutionRequest, options?: RpcOptions): UnaryCall<TestExecutionRequest, Empty>;
    /**
     * @generated from protobuf rpc: QueueSpan(ollyllm.v1.SpanCreationRequest) returns (google.protobuf.Empty);
     */
    queueSpan(input: SpanCreationRequest, options?: RpcOptions): UnaryCall<SpanCreationRequest, Empty>;
}
/**
 * @generated from protobuf service ollyllm.v1.OllyllmService
 */
export class OllyllmServiceClient implements IOllyllmServiceClient, ServiceInfo {
    typeName = OllyllmService.typeName;
    methods = OllyllmService.methods;
    options = OllyllmService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: QueueTest(ollyllm.v1.TestExecutionRequest) returns (google.protobuf.Empty);
     */
    queueTest(input: TestExecutionRequest, options?: RpcOptions): UnaryCall<TestExecutionRequest, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TestExecutionRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: QueueSpan(ollyllm.v1.SpanCreationRequest) returns (google.protobuf.Empty);
     */
    queueSpan(input: SpanCreationRequest, options?: RpcOptions): UnaryCall<SpanCreationRequest, Empty> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SpanCreationRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
